# https://github.com/kubernetes/ingress-nginx/blob/main/charts/ingress-nginx/values.yaml
controller:
  minAvailable: "50%"
  replicaCount: 2
  ingressClassResource:
    default: true
  ingressClass: nginx
  service:
    enabled: true
    type: LoadBalancer
    enableHttp: true
    enableHttps: true
    annotations:
      # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.6/guide/service/annotations/
      service.beta.kubernetes.io/aws-load-balancer-name: ${elb_name}
      service.beta.kubernetes.io/aws-load-balancer-type: external
      service.beta.kubernetes.io/aws-load-balancer-scheme: ${elb_scheme}
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
      service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=true
      service.beta.kubernetes.io/aws-load-balancer-attributes: load_balancing.cross_zone.enabled=true
  # metrics:
  #   enabled: true
  # opentelemetry:
  #   enabled: true
  # config:
  #   enable-opentelemetry: "true"
  #   opentelemetry-operation-name: "HTTP $request_method $service_name $uri"
  #   opentelemetry-trust-incoming-span: "true"
  #   otlp-collector-host: "adot-collector.adot-collector-kubeprometheus.svc"
  #   otlp-collector-port: "4317"
  #   otel-max-queuesize: "2048"
  #   otel-schedule-delay-millis: "5000"
  #   otel-max-export-batch-size: "512"
  #   otel-service-name: "nginx-proxy" # Opentelemetry resource name
  #   otel-sampler: "AlwaysOn" # Also: AlwaysOff, TraceIdRatioBased
  #   otel-sampler-ratio: "1.0"
  #   otel-sampler-parent-based: "true"
